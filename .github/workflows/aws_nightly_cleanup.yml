---
name: AWS Nightly Cleanup of test regions

on:
    schedule:
        - cron: 0 5 * * *
    workflow_dispatch:
        inputs:
            cleanup_older_than:
                description: Minimum age of the ressources to cleanup
                default: 12h
    pull_request:
        paths:
            - .github/workflows/aws_nightly_cleanup.yml

env:
    AWS_PROFILE: infex
    CLEANUP_OLDER_THAN: ${{ github.event.inputs.cleanup_older_than || '12h' }}
    # renovate: datasource=github-tags depName=gruntwork-io/cloud-nuke
    CLOUD_NUKE_VERSION: v0.37.2

jobs:
    aws-nightly-cleanup:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false # don't propagate failing jobs
            matrix:
                aws_test_regions: [eu-west-2, eu-west-3]
        env:
            AWS_REGION: ${{ matrix.aws_test_regions }}
        steps:
            - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4

            - name: Import Secrets
              id: secrets
              uses: hashicorp/vault-action@d1720f055e0635fd932a1d2a48f87a666a57906c # v3
              with:
                  url: ${{ secrets.VAULT_ADDR }}
                  method: approle
                  roleId: ${{ secrets.VAULT_ROLE_ID }}
                  secretId: ${{ secrets.VAULT_SECRET_ID }}
                  exportEnv: false
                  secrets: |
                      secret/data/products/infrastructure-experience/ci/common AWS_ACCESS_KEY;
                      secret/data/products/infrastructure-experience/ci/common AWS_SECRET_KEY;

            # Official action does not support profiles
            - name: Add profile credentials to ~/.aws/credentials
              run: |
                  aws configure set aws_access_key_id ${{ steps.secrets.outputs.AWS_ACCESS_KEY }} --profile ${{ env.AWS_PROFILE }}
                  aws configure set aws_secret_access_key ${{ steps.secrets.outputs.AWS_SECRET_KEY }} --profile ${{ env.AWS_PROFILE }}
                  aws configure set region ${{ env.AWS_REGION }} --profile ${{ env.AWS_PROFILE }}

            - name: Install Cloud Nuke
              run: |
                  wget https://github.com/gruntwork-io/cloud-nuke/releases/download/${{ env.CLOUD_NUKE_VERSION }}/cloud-nuke_linux_amd64
                  chmod +x cloud-nuke_linux_amd64

            # This is likely to fail, therefore we ignore the error
            # We're ignoring ec2_dhcp_option as they couldn't be deleted
            # cloudtrail is managed by IT and can't be deleted either
            - name: Run Cloud Nuke
              timeout-minutes: 45
              env:
                  DISABLE_TELEMETRY: 'true'
              run: |
                  ./cloud-nuke_linux_amd64 aws \
                  --region ${{ env.AWS_REGION }} \
                  --force \
                  --older-than ${{ env.CLEANUP_OLDER_THAN }} \
                  --exclude-resource-type ec2_dhcp_option \
                  --exclude-resource-type ec2-keypairs \
                  --exclude-resource-type s3 \
                  --exclude-resource-type cloudtrail || true

            # Following will delete regional resources that cloud-nuke does not support
            - name: Delete additional regional AWS resources
              timeout-minutes: 15
              run: .github/workflows/scripts/aws_regional_cleanup.sh "${{ env.AWS_REGION }}"

            # Following will delete global resources that cloud-nuke does not support
            - name: Delete additional global AWS resources
              # Only run in a single matrix run
              if: ${{ env.AWS_REGION == 'eu-west-2' }}
              timeout-minutes: 15
              run: .github/workflows/scripts/aws_global_cleanup.sh

            # The second run should remove the remaining resources (VPCs) and fail if there's anything left
            - name: Run Cloud Nuke
              timeout-minutes: 45
              env:
                  DISABLE_TELEMETRY: 'true'
              run: |
                  ./cloud-nuke_linux_amd64 aws \
                  --region ${{ env.AWS_REGION }} \
                  --force \
                  --older-than ${{ env.CLEANUP_OLDER_THAN }} \
                  --exclude-resource-type ec2_dhcp_option \
                  --exclude-resource-type cloudtrail \
                  --exclude-resource-type ec2-keypairs \
                  --exclude-resource-type s3

    notify-on-failure:
        runs-on: ubuntu-latest
        if: failure()
        needs:
            - aws-nightly-cleanup
        steps:
            - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4

            - name: Notify in Slack in case of failure
              id: slack-notification
              if: github.event_name == 'schedule'
              uses: ./.github/actions/report-failure-on-slack
              with:
                  vault_addr: ${{ secrets.VAULT_ADDR }}
                  vault_role_id: ${{ secrets.VAULT_ROLE_ID }}
                  vault_secret_id: ${{ secrets.VAULT_SECRET_ID }}
