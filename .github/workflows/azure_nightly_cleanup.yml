---
name: Azure Scheduled Cleanup of test regions

permissions:
    id-token: write

on:
    schedule:
        # Single daily schedule at 5:00
        - cron: 0 5 * * *
    workflow_dispatch:
        inputs:
            region:
                description: Azure region to clean up
                default: swedencentral
            required_tag_key:
                description: Required tag key for deletion (optional)
                required: false
            required_tag_value:
                description: Required tag value for deletion (optional)
                required: false
            protected_tag_key:
                description: Protected tag key (optional; RGs with this will NEVER be deleted)
                required: false
                default: neverdelete
            protected_tag_value:
                description: Protected tag value (optional)
                required: false
                default: 'true'

    pull_request:
        paths:
            - .github/workflows/azure_nightly_cleanup.yml
            - .github/workflows/scripts/azure_rg_cleanup.sh

# Limit workflow to a single execution per ref
concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    azure-cleanup:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false # don't propagate failing jobs
            matrix:
                # Define regions and types of cleanup based on day
                # Please also update the README.md of the project
                config:
                    - region: swedencentral
                      day: All

        steps:
            - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

            - name: Determine AZURE_REGION
              id: determine-values
              run: |
                  if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
                      AZURE_REGION="${{ github.event.inputs.region }}"
                  else
                      AZURE_REGION="${{ matrix.config.region }}"
                  fi

                  echo "AZURE_REGION=$AZURE_REGION" | tee -a "$GITHUB_ENV"

            - name: Set environment from workflow_dispatch inputs
              run: |
                  if [[ -n "${{ github.event.inputs.required_tag_key }}" ]]; then
                  echo "REQUIRED_TAG_KEY=${{ github.event.inputs.required_tag_key }}" >> "$GITHUB_ENV"
                  fi
                  if [[ -n "${{ github.event.inputs.required_tag_value }}" ]]; then
                  echo "REQUIRED_TAG_VALUE=${{ github.event.inputs.required_tag_value }}" >> "$GITHUB_ENV"
                  fi
                  if [[ -n "${{ github.event.inputs.protected_tag_key }}" ]]; then
                  echo "PROTECTED_TAG_KEY=${{ github.event.inputs.protected_tag_key }}" >> "$GITHUB_ENV"
                  fi
                  if [[ -n "${{ github.event.inputs.protected_tag_value }}" ]]; then
                  echo "PROTECTED_TAG_VALUE=${{ github.event.inputs.protected_tag_value }}" >> "$GITHUB_ENV"
                  fi


            - name: Check if job should run based on the day
              id: day-check
              run: |
                  # Initialize a variable to determine if the job should continue
                  should_run=true

                  # If it's a workflow_dispatch, only allow the first region (swedencentral) of the matrix to run
                  if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
                      if [[ "${{ matrix.config.region }}" != "swedencentral" ]]; then
                          echo "Skipping job for this region because only the first region is allowed to run for workflow_dispatch."
                          should_run=false
                      else
                          echo "Running job for the first region only since it's a workflow_dispatch event."
                      fi
                  else
                      # Otherwise, check if the day matches the one in the matrix
                      current_day=$(date +%A)
                      if [[ "${{ matrix.config.day }}" != "All" && "${{ matrix.config.day }}" != "$current_day" ]]; then
                          echo "Skipping job for region ${{ env.AZURE_REGION }} as itâ€™s intended for ${{ matrix.config.day }} only."
                          should_run=false
                      else
                          echo "Running job for region ${{ env.AZURE_REGION }} on the correct day: $current_day."
                      fi
                  fi

                  echo "should_run=$should_run" | tee -a "$GITHUB_ENV"


            # For PR purposes we're overwriting the setting and enable dry run
            - name: Set DRY_RUN for PR
              if: github.event_name == 'pull_request'
              run: |
                  echo "DRY_RUN=true" | tee -a "$GITHUB_ENV"

            - name: Import Secrets
              if: ${{ env.should_run == 'true' }}
              id: secrets
              uses: hashicorp/vault-action@7709c609789c5e27b757a85817483caadbb5939a # v3
              with:
                  url: ${{ secrets.VAULT_ADDR }}
                  method: approle
                  roleId: ${{ secrets.VAULT_ROLE_ID }}
                  secretId: ${{ secrets.VAULT_SECRET_ID }}
                  exportEnv: true
                  secrets: |
                      secret/data/products/infrastructure-experience/ci/common AZURE_CLIENT_ID;
                      secret/data/products/infrastructure-experience/ci/common AZURE_TENANT_ID;
                      secret/data/products/infrastructure-experience/ci/common AZURE_SUBSCRIPTION_ID;

            - name: Azure Login with OIDC
              if: ${{ env.should_run == 'true' }}
              uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2.3.0
              with:
                  client-id: ${{ steps.secrets.outputs.AZURE_CLIENT_ID }}
                  tenant-id: ${{ steps.secrets.outputs.AZURE_TENANT_ID }}
                  subscription-id: ${{ steps.secrets.outputs.AZURE_SUBSCRIPTION_ID }}

            - name: Run Azure Cleanup Script
              if: ${{ env.should_run == 'true' }}
              id: azure-cleanup
              run: |
                  ./.github/workflows/scripts/azure_rg_cleanup.sh


    notify-on-failure:
        runs-on: ubuntu-latest
        if: failure()
        needs:
            - azure-cleanup
        steps:
            - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

            - name: Notify in Slack in case of failure
              id: slack-notification
              if: github.event_name == 'schedule'
              uses: ./.github/actions/report-failure-on-slack
              with:
                  vault_addr: ${{ secrets.VAULT_ADDR }}
                  vault_role_id: ${{ secrets.VAULT_ROLE_ID }}
                  vault_secret_id: ${{ secrets.VAULT_SECRET_ID }}
